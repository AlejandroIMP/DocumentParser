services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend_container_dp
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
    environment:
      - NODE_ENV=development
      - DATABASE_URL="postgresql://alejo:ola123@documentparser-db-1:5432/documents_db?schema=public"
    depends_on:
      - db
    command: ["pnpm", "dev"]
    networks:
      - app-network   

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend_container_dp
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app:delegated
    environment:
      - NODE_ENV=development
      - VITE_HOST=0.0.0.0
      - CHOKIDAR_USEPOLLING=true
    user: "node"
    depends_on:
      - backend
    networks:
      - app-network

  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_container_dp
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - "8080:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    restart: unless-stopped
    depends_on:
      - db
    networks:
      - app-network

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx_container_dp
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./frontend/dist:/usr/share/nginx/html
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

volumes:
  postgres_data: {}
  redis_data: {}
  pgadmin-data: {}
  frontend_node_modules: {}

networks:
  app-network:
    driver: bridge
